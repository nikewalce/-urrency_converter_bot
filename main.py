from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes
)

RATES = {
    "USD_RUB": 80.33,  # 1 USD = 90.50 RUB
    "RUB_USD": 1 / 80.33,  # 1 RUB = 0.01105 USD
    "THB_RUB": 2.45,  # 1 THB = 2.45 RUB
    "RUB_THB": 1 / 2.45,  # 1 RUB = 0.4082 THB
    "USD_THB": 32.48,  # 1 USD = 36.80 THB
    "THB_USD": 1 / 32.48  # 1 THB = 0.02717 USD
}


def get_keyboard():
    keyboard = [
        [
            InlineKeyboardButton("USD ‚Üí RUB", callback_data="USD_RUB"),
            InlineKeyboardButton("RUB ‚Üí USD", callback_data="RUB_USD")
        ],
        [
            InlineKeyboardButton("THB ‚Üí RUB", callback_data="THB_RUB"),
            InlineKeyboardButton("RUB ‚Üí THB", callback_data="RUB_THB")
        ],
        [
            InlineKeyboardButton("USD ‚Üí THB", callback_data="USD_THB"),
            InlineKeyboardButton("THB ‚Üí USD", callback_data="THB_USD")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üí∞ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç –¥–ª—è –õ–∏–∑–æ—á–∫–∏‚ù§Ô∏è\n–í—ã–±–µ—Ä–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:",
        reply_markup=get_keyboard()
    )


async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    pair = query.data
    context.user_data["currency_pair"] = pair
    from_cur, to_cur = pair.split("_")

    await query.edit_message_text(
        f"–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: {from_cur} ‚Üí {to_cur}\n"
        f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 {from_cur} = {RATES[pair]:.4f} {to_cur}\n"
        "–õ–∏–∑–æ—á–∫–∞, –≤–≤–µ–¥–∏ —Å—É–º–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:"
    )


async def convert(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        amount = float(update.message.text.replace(",", "."))
        pair = context.user_data.get("currency_pair")

        if not pair:
            await update.message.reply_text("–°–æ–ª–Ω—Ü–µ, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É (/start)")
            return

        if pair not in RATES:
            await update.message.reply_text("–û—à–∏–±–∫–∞: –∫—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        from_cur, to_cur = pair.split("_")
        result = amount * RATES[pair]

        await update.message.reply_text(
            f"üîπ {amount:.2f} {from_cur} = {result:.2f} {to_cur}\n"
            f"–ö—É—Ä—Å: 1 {from_cur} = {RATES[pair]:.4f} {to_cur}\n\n"
            "–ù–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: /start"
        )

    except ValueError:
        await update.message.reply_text("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ! –ù–∞–ø—Ä–∏–º–µ—Ä: 100 –∏–ª–∏ 50.5")


def main():
    application = Application.builder().token("").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_click))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, convert))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
    application.run_polling()


if __name__ == "__main__":
    main()